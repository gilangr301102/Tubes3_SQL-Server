// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Database.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api.Models.Biodata", b =>
                {
                    b.Property<string>("NIK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("agama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alamat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("golongan_darah")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("jenis_kelamin")
                        .HasColumnType("int");

                    b.Property<string>("kewarganegaraan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pekerjaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status_perkawinan")
                        .HasColumnType("int");

                    b.Property<string>("tanggal_lahir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tempat_lahir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NIK");

                    b.ToTable("biodata");

                    b.HasData(
                        new
                        {
                            NIK = "1352123456",
                            agama = "Religion A",
                            alamat = "Address A",
                            golongan_darah = "O",
                            jenis_kelamin = 0,
                            kewarganegaraan = "Country A",
                            nama = "John Doe",
                            pekerjaan = "Job A",
                            status_perkawinan = 0,
                            tanggal_lahir = "1990-01-01",
                            tempat_lahir = "City A"
                        },
                        new
                        {
                            NIK = "1352123457",
                            agama = "Religion B",
                            alamat = "Address B",
                            golongan_darah = "A",
                            jenis_kelamin = 1,
                            kewarganegaraan = "Country B",
                            nama = "Jane Smith",
                            pekerjaan = "Job B",
                            status_perkawinan = 1,
                            tanggal_lahir = "1992-02-02",
                            tempat_lahir = "City B"
                        });
                });

            modelBuilder.Entity("api.Models.SidikJari", b =>
                {
                    b.Property<string>("berkas_citra")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("berkas_citra");

                    b.ToTable("sidik_jari");

                    b.HasData(
                        new
                        {
                            berkas_citra = "FingerprintImage1",
                            nama = "John Doe"
                        },
                        new
                        {
                            berkas_citra = "FingerprintImage2",
                            nama = "Jane Smith"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
